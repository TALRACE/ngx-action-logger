variables:
  COLON: ':' # workaround for yaml parser

.checkout_branch: &checkout_branch
- git checkout $CI_COMMIT_BRANCH
- git pull origin $CI_COMMIT_BRANCH

.run_tests: &run_tests
- npm install
- npm run test

.build_version: &build_version
- npm config set registry https://registry.npmjs.com/
- npm install
- npm run build

.node-alpine-git_image: &node-alpine-git_image
  image: timbru31/node-alpine-git:latest

# # # This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/

stages:
  - test
  - test_mr
  - versioning
  - publish

run_tests:
  stage: test
  <<: *node-alpine-git_image
  # it's a branch
  only:    
    - release
  before_script:
    - apk add chromium
    - apk update && apk add openjdk11 --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community
    - export CHROME_BIN='/usr/bin/chromium-browser'
    - git config --global user.email "shuser@talrace.com"
    - git config --global user.name "shuser"
  script:
    - *checkout_branch
    - *run_tests
    - npm run sonar

run_tests_mr:
  stage: test_mr
  <<: *node-alpine-git_image
  only:
    - merge_requests
  except:
    variables:
      - $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^release$/i
  before_script:
    - apk add chromium
    - export CHROME_BIN='/usr/bin/chromium-browser'
    - git config --global user.email "shuser@talrace.com"
    - git config --global user.name "shuser"
  script:    
    - git fetch
    - git checkout $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - git pull
    - *run_tests

# Patch npm version and push version tag to commit branch
version_patch:
  stage: versioning
  <<: *node-alpine-git_image
  only:
    variables:
      - $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TITLE =~ /^Merge branch 'release' into 'main'$/i
  before_script:
    - git config --global user.email "shuser@talrace.com" 
    - git config --global user.name "shuser"
  script:
    - *checkout_branch
    - *build_version
    - cd projects/ngx-action-logger
    - npm version patch -m "Update to %s" --force
    - git add .
    - git commit -m "Update a version"
    - git push https://gitlab-ci-token:${pat}@glab.talrace.com/talrace/ngx-action-logger.git/
    - cd ../..
    - npm version patch -m "Update to %s" --force
    - git push https://gitlab-ci-token:${pat}@glab.talrace.com/talrace/ngx-action-logger.git/ --follow-tags

# Publish tagged versions to npm
publish_version:
  stage: publish
  <<: *node-alpine-git_image
  only:
    refs:
      - tags
  script:
    - *build_version
    - npm run publish
